nameOverride: ""
fullnameOverride: ""

# Configuration for Consul
# See https://www.consul.io/docs/k8s/helm
consul:
  # Whether or not to deploy a Consul instance
  enabled: true

sync:
  config:
    consul:
      # The address of the Consul server
      # By default, this uses the load-balanced server from the internal Consul
      address: "{{ include \"zenith.componentname\" (list . \"consul\") }}-consul-server"
      # The port of the Consul server
      port: 8500
      # The timeout to use with Consul blocking queries
      blockingQueryTimeout: 300
      # The tag to use to filter out Zenith services
      serviceTag: zenith-subdomain
    kubernetes:
      # The namespace to create Zenith service resources in
      namespace: zenith-services
      # The ingress configuration
      ingress:
        # The base domain to use for the proxied services
        # Proxied services will be made available at <subdomain>.<base domain>
        baseDomain:
  # The image to use for the sync component
  image:
    repository: ghcr.io/stackhpc/zenith-sync
    pullPolicy: IfNotPresent
    tag: ""  # Defaults to appVersion if not given
  # Customise container-level security context for sync pods
  securityContext:
    # By default, require that the container runs as a non-root user with
    # a read-only root filesystem
    capabilities:
      drop: [ALL]
    readOnlyRootFilesystem: true
    runAsNonRoot: true
  # Resources for sync containers
  resources: {}
  # Configuration for the kubectl proxy container
  kubectlProxy:
    image:
      repository: bitnami/kubectl
      pullPolicy: IfNotPresent
      tag: ""  # Defaults to the Kubernetes version if not given
    securityContext: {}
    resources: {}
  imagePullSecrets: []
  # Customise annotations for sync pods
  podAnnotations: {}
  # Customise pod-level security context for sync pods
  podSecurityContext: {}
  # Customise node selector for sync pods
  nodeSelector: {}
  # Customise tolerations for sync pods
  tolerations: []
  # Customise affinity rules for sync pods
  affinity: {}

sshd:
  config: {}
  # The image to use for the SSHD server
  image:
    repository: ghcr.io/stackhpc/zenith-sshd
    pullPolicy: IfNotPresent
    tag: ""  # Defaults to appVersion if not given
  imagePullSecrets: []
  # The number of SSHD replicas to use
  replicaCount: 1
  # Customise annotations for SSHD pods
  podAnnotations: {}
  # Customise pod-level security context for SSHD pods
  podSecurityContext: {}
  # Customise container-level security context for SSHD pods
  securityContext:
    # By default, require that the container runs as a non-root user with
    # a read-only root filesystem
    capabilities:
      drop: [ALL]
    readOnlyRootFilesystem: true
    runAsNonRoot: true
  # The service definition for SSHD
  # Because SSH is a TCP service, it cannot be exposed with an Ingress
  # Instead, it must be exposed with a NodePort or LoadBalancer service
  service:
    type: NodePort
    port: 22
    # Use a fixed default node port
    nodePort: 32222
  # Resources for SSHD containers
  resources: {}
  # Customise node selector for SSHD pods
  nodeSelector: {}
  # Customise tolerations for SSHD pods
  tolerations: []
  # Customise affinity rules for SSHD pods
  affinity: {}
