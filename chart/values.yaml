# Ingress settings are permitted to come from globals, mostly to reducing duplication,
# and hence potential for mistakes, when used as part of an Azimuth deployment
# For a standalone deployment, sync.config.kubernetes.ingress should be preferred
global:
  ingress: {}

# Configuration for Consul
# See https://www.consul.io/docs/k8s/helm
consul:
  # Whether or not to deploy a Consul instance
  enabled: true

sync:
  enabled: true
  config:
    consul:
      # The address of the Consul server
      # By default, this uses the load-balanced server from the internal Consul
      address: "{{ .Release.Name }}-consul-server"
      # The port of the Consul server
      # port:
      # The timeout to use with Consul blocking queries
      # blockingQueryTimeout:
      # The tag to use to filter out Zenith services
      # serviceTag:
    kubernetes:
      # The namespace to create Zenith service resources in
      namespace: zenith-services
      # The ingress configuration
      # ingress:
        # The base domain to use for the proxied services
        # Proxied services will be made available at <subdomain>.<base domain>
        # baseDomain:
        # The ingress class to use for ingress resources
        # className:
        # Custom annotations to add to the created ingress resources
        # annotations:
        # The TLS configuration
        # tls:
        #   Indicates if TLS should be enabled (default true)
        #   enabled: true
        #   The name of a secret containing a wildcard certificate
        #   secretName:
        # The external auth configuration
        # auth:
        #   The URL for verifying incoming requests
        #   url:
        #   The URL to redirect to when the verify URL returns a 401
        #   If not set, the 401 will just be returned
        #   signinUrl:
        #   The URL parameter to contain the original URL when redirecting to the signin URL
        #   nextUrlParam: next
        #   List of headers from the authentication response to add to the upstream request
        #   upstreamHeaders: []
  # The image to use for the sync component
  image:
    repository: ghcr.io/stackhpc/zenith-sync
    pullPolicy: IfNotPresent
    tag: ""  # Defaults to appVersion if not given
  # Customise container-level security context for sync pods
  securityContext:
    # By default, require that the container runs as a non-root user with
    # a read-only root filesystem
    capabilities:
      drop: [ALL]
    readOnlyRootFilesystem: true
    runAsNonRoot: true
  # Resources for sync containers
  resources: {}
  # Configuration for the kubectl proxy container
  kubectlProxy:
    image:
      repository: bitnami/kubectl
      pullPolicy: IfNotPresent
      tag: ""  # Defaults to the Kubernetes version if not given
    securityContext: {}
    resources: {}
  imagePullSecrets: []
  # Customise annotations for sync pods
  podAnnotations: {}
  # Customise pod-level security context for sync pods
  podSecurityContext: {}
  # Customise node selector for sync pods
  nodeSelector: {}
  # Customise tolerations for sync pods
  tolerations: []
  # Customise affinity rules for sync pods
  affinity: {}

sshd:
  enabled: true
  config: {}
    # The address of the Consul agent
    # consulAddress:
    # The port of the Consul agent
    # consulPort:
    # The TTL for the services created in Consul
    # consulServiceTtl:
    # The heartbeat interval for services created in Consul
    # consulHeartbeatInterval:
    # The interval after which a service in Consul will be deregistered
    # consulDeregisterInterval:
    # The number of times that posting a heartbeat to Consul can fail before a tunnel is closed
    # consulHeartbeatFailures:
    # The tag to use when registering services with Consul
    # serviceTag:
    # The number of seconds to wait to receive a tunnel configuration before exiting
    # configureTimeout:
    # A list of subdomains that cannot be used for Zenith services
    # reservedSubdomains:
  # The image to use for the SSHD server
  image:
    repository: ghcr.io/stackhpc/zenith-sshd
    pullPolicy: IfNotPresent
    tag: ""  # Defaults to appVersion if not given
  imagePullSecrets: []
  # The number of SSHD replicas to use
  replicaCount: 1
  # Customise annotations for SSHD pods
  podAnnotations: {}
  # Customise pod-level security context for SSHD pods
  podSecurityContext: {}
  # Customise container-level security context for SSHD pods
  securityContext:
    # By default, require that the container runs as a non-root user with
    # a read-only root filesystem
    capabilities:
      drop: [ALL]
    readOnlyRootFilesystem: true
    runAsNonRoot: true
  # The service definition for SSHD
  # Because SSH is a TCP service, it cannot be exposed with an Ingress
  # Instead, it must be exposed with a NodePort or LoadBalancer service
  service:
    type: LoadBalancer
    port: 22
    # Use a fixed node port
    # nodePort: 32222
    # Use a fixed load-balancer IP
    # loadBalancerIP:
  # Resources for SSHD containers
  resources: {}
  # Customise node selector for SSHD pods
  nodeSelector: {}
  # Customise tolerations for SSHD pods
  tolerations: []
  # Customise affinity rules for SSHD pods
  affinity: {}
