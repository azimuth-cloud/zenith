---
name: Publish artifacts

on:
  # Publish artifacts on every push to main and every tag
  push:
    branches:
      - main
    tags:
      - "*"
  # Also allow publication to be done via a workflow call
  # In this case, the chart version is returned as an output
  workflow_call:
    inputs:
      ref:
        type: string
        description: The ref to build.
        required: true
    outputs:
      chart-version:
        description: The chart version that was published
        value: ${{ jobs.build_push_chart.outputs.chart-version }}

jobs:
  build_push_images:
    name: Build and push images
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          - component: client
          - component: operator
          - component: proxy
          - component: registrar
          - component: sshd
          - component: sync
    permissions:
      contents: read
      id-token: write         # needed for signing the images with GitHub OIDC Token
      packages: write         # required for pushing container images
      security-events: write  # required for pushing SARIF files
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}

      - name: Login to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Get SemVer version for current commit
        id: semver
        uses: stackhpc/github-actions/semver@master

      - name: Calculate metadata for image
        id: image-meta
        uses: docker/metadata-action@v5
        with:
          images: ghcr.io/stackhpc/zenith-${{ matrix.component }}
          # Produce the branch name or tag and the SHA as tags
          tags: |
            type=ref,event=branch
            type=ref,event=tag
            type=raw,value=${{ steps.semver.outputs.short-sha }}

      - name: Build and push image
        uses: stackhpc/github-actions/docker-multiarch-build-push@master
        with:
          cache-key: ${{ matrix.component }}
          context: ./${{ matrix.component }}
          platforms: linux/amd64,linux/arm64
          push: true
          tags: ${{ steps.image-meta.outputs.tags }}
          labels: ${{ steps.image-meta.outputs.labels }}

  # This task mirrors and tags the current latest version of the
  # required exporter images, to reduce reliance on Docker Hub
  mirror_exporter_images:
    name: Mirror exporter images
    runs-on: ubuntu-latest
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}

      - name: Mirror exporter images
        run: |-
          podman run \
            -v $PWD:/pwd \
            -w /pwd \
            quay.io/skopeo/stable:latest \
            sync \
              --src yaml \
              --dest docker \
              --dest-creds ${{ github.actor }}:${{ secrets.GITHUB_TOKEN }} \
              --all \
              skopeo-manifest.yml \
              ghcr.io/stackhpc/zenith

  build_push_chart:
    name: Build and push Helm chart
    runs-on: ubuntu-latest
    # Only build and push the chart if the images built successfully
    needs: [build_push_images, mirror_exporter_images]
    outputs:
      chart-version: ${{ steps.semver.outputs.version }}
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          ref: ${{ inputs.ref || github.ref }}
          # This is important for the semver action to work correctly
          # when determining the number of commits since the last tag
          fetch-depth: 0

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10'

      - name: Install Python packages
        run: |
          set -e
          python -m pip install --upgrade pip
          python -m pip install --no-deps -r ./operator/requirements.txt
          python -m pip install --no-deps -r ./sync/requirements.txt
          python -m pip install --no-deps -e ./operator
          python -m pip install --no-deps -e ./sync

      - name: Generate operator CRDs
        run: |
          kcr_generate \
            zenith.operator.models \
            zenith.stackhpc.com \
            ./charts/operator/files \
            --category zenith

      - name: Generate store CRDs
        run: |
          kcr_generate \
            zenith.sync.store.crd.models \
            zenith.stackhpc.com \
            ./charts/server/files/crds \
            --category zenith

      - name: Get SemVer version for current commit
        id: semver
        uses: stackhpc/github-actions/semver@master

      - name: Publish Helm charts
        uses: stackhpc/github-actions/helm-publish@master
        with:
          token: ${{ secrets.GITHUB_TOKEN }}
          version: ${{ steps.semver.outputs.version }}
          app-version: ${{ steps.semver.outputs.short-sha }}
