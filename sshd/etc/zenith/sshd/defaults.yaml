logging:
  formatters:
    # Format for logs from tunnels that are logged in SSHD
    # Make sure to include the subdomain and tunnel ID
    tunnel_sshd:
      format: "[%(asctime)s] %(name)-20.20s [%(levelname)-8.8s] %(subdomain)s{%(tunnelid)s} %(message)s"

  handlers:
    # NOTE: This fd trick works because all procs run as zenith, including SSHD
    # Handlers pointing directly to the stdout/err of the SSHD process, using the default format
    # Used for the root logger
    sshd_stdout:
      class: logging.FileHandler
      filename: /proc/1/fd/1
      formatter: default
      filters:
        - less_than_warning
    sshd_stderr:
      class: logging.FileHandler
      filename: /proc/1/fd/2
      formatter: default
      level: WARNING
    # Handlers pointing directly to the stdout/err of the SSHD process, using the format that
    # shows subdomain and tunnel ID
    # Used only for the tunnel logger
    tunnel_sshd_stdout:
      class: logging.FileHandler
      filename: /proc/1/fd/1
      formatter: tunnel_sshd
      filters:
        - less_than_warning
    tunnel_sshd_stderr:
      class: logging.FileHandler
      filename: /proc/1/fd/2
      formatter: tunnel_sshd
      level: WARNING

  loggers:
    # Send logs for the root logger to the SSHD stdout/err
    "":
      handlers:
        - sshd_stdout
        - sshd_stderr
    # Send the tunnel logs to the stdout/err of the forked SSHD process
    # That should mean that these are the only logs that the client sees
    # Also send them to SSHD stdout/err using the tunnel handlers
    zenith.sshd.tunnel:
      handlers:
        - stdout
        - stderr
        - tunnel_sshd_stdout
        - tunnel_sshd_stderr
      propagate: false
