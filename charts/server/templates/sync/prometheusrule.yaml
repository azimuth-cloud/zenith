{{-
  if and
    .Values.sync.enabled
    .Values.metrics.enabled
    .Values.metrics.prometheus.rules.enabled
}}
apiVersion: monitoring.coreos.com/v1
kind: PrometheusRule
metadata:
  name: {{ include "zenith.componentname" (list . "sync") }}
  labels: {{ include "zenith.componentLabels" (list . "sync") | nindent 4 }}
spec:
  groups:
    - name: zenith.recording-rules
      rules:
        # This metric indicates if a service has been initialised
        - record: zenith_service_initialised
          expr: >-
            sum(topk(1, zenith_service_info{fingerprint=~".+"} or (zenith_service_info{fingerprint=""} - 1)) by(service_name)) by(service_name)

        # This metric indicates the number of clients in each status
        - record: zenith_service_client_status
          expr: >-
            sum(topk(1, label_replace(zenith_service_endpoint_info, "status", "$1", "endpoint_status", "(.*)")) by(service_name, endpoint_id, status)) by(service_name, status)

    # Zenith service alerts
    - name: zenith.alerts
      rules:
        # This alert fires when a service has no passing clients
        - alert: ZenithServiceHasNoHealthyClients
          expr: sum(zenith_service_client_status{status="passing"}) by(service_name) == 0
          for: 15m
          annotations:
            description: >-
              Zenith service {{ "{{" }} $labels.service_name {{ "}}" }} has had no
              healthy clients for more than 15 minutes.
            summary: >-
              Zenith service has had no healthy clients for more than 15 minutes.
          labels:
            severity: critical

        # This alert fires when a service has at least one client that is not passing
        # It only fires when there is at least one passing client (see above)
        # Since this is a scenario that occurs when clients reconnect after a restart
        # or an upgrade of the server, the trigger time should be greater than the
        # reap_after property of the service as set by SSHD
        # By default, this is 600 seconds
        - alert: ZenithServiceHasUnhealthyClients
          expr: >-
            (
              (sum(zenith_service_client_status{status="passing"}) by(service_name) > bool 0) *
              (sum(zenith_service_client_status{status!="passing"}) by(service_name) > bool 0)
            ) > 0
          for: 15m
          annotations:
            description: |-
              Zenith service {{ "{{" }} $labels.service_name {{ "}}" }} has had at least
              one unhealthy client for more than 15 minutes.
            summary: >-
              Zenith service has had at least one unhealthy client for more than 15 minutes.
          labels:
            severity: warning

        # This alert fires when a service has a healthy client but no Helm release
        # This indicates a failure in the sync process
        - alert: ZenithClientNotSynced
          expr: >-
            (
              sum(zenith_service_client_status{status="passing"}) by(service_name)
              unless
              count(zenith_service_helm_status) by(service_name)
            ) > 0
          for: 15m
          annotations:
            description: |-
              Zenith service {{ "{{" }} $labels.service_name {{ "}}" }} has not been synced.
            summary: >-
              Zenith service has not been synced.
          labels:
            severity: critical

        # This alert fires when a Helm release for a service is not in the deployed state
        - alert: ZenithClientSyncFailed
          expr: >-
            count(zenith_service_helm_status{status!="deployed"}) by(service_name) > 0
          for: 15m
          annotations:
            description: |-
              Zenith service {{ "{{" }} $labels.service_name {{ "}}" }} has not synced correctly.
            summary: >-
              Zenith service has not synced correctly.
          labels:
            severity: critical
{{- end }}
