# Configuration for the upstream that is being proxied
upstream:
  host:
  port:
  # One of http or https
  scheme: http
  # Read timeout in seconds, or leave blank for default
  readTimeout:

# Configuration for the Zenith client
zenithClient:
  # The base64-encoded SSH private key data for the client
  # The SSH key should already be associated with a Zenith subdomain
  sshPrivateKeyData:
  # Configuration for the Zenith server
  server:
    host:
    port: 22
  # Auth configuration for the Zenith proxy
  auth:
    # Indicates whether to apply authentication for the service
    skip: false
    # Authentication parameters to be used by the Zenith auth callout
    # Available parameters will depend on the configuration of the target Zenith server
    params: {}
  # The image to use for the Zenith client container
  image:
    repository: ghcr.io/stackhpc/zenith-client
    pullPolicy: IfNotPresent
    tag: ""  # Defaults to appVersion if not given
  # Resource requests and limits for the Zenith client container
  resources: {}

mitmProxy:
  enabled: true
  # The port that the proxy is listening on
  # It should listen to localhost only on plain http
  port: 8080
  # The image to use for the proxy container
  image:
    repository: ghcr.io/stackhpc/zenith-proxy
    pullPolicy: IfNotPresent
    tag: ""  # Defaults to appVersion if not given
  # Resource requests and limits for the proxy container
  resources: {}

imagePullSecrets: []

# The number of replicas to use
replicaCount: 1

# Pod-level security context
podSecurityContext:
  runAsNonRoot: true
  runAsUser: 1001

# Container-level security context
securityContext:
  allowPrivilegeEscalation: false
  capabilities:
    drop: [ALL]
  readOnlyRootFilesystem: true

# Node selector for operator pods
nodeSelector: {}

# Affinity rules for operator pods
affinity: {}

# Tolerations for operator pods
tolerations: []
